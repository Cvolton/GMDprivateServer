<?php
class ExploitPatch {
	public static function remove($string, $trim = 0) {
		if($trim != 0) return mb_substr(trim(explode(")", str_replace("\0", "", explode("#", explode("~", explode("|", explode(":", trim(htmlspecialchars($string,ENT_QUOTES)))[0])[0])[0])[0]))[0]), 0, $trim);
		else return trim(explode(")", str_replace("\0", "", explode("#", explode("~", explode("|", explode(":", trim(htmlspecialchars($string,ENT_QUOTES)))[0])[0])[0])[0]))[0]);
	}
	public static function charclean($string, $trim = 0) {
		if($trim != 0) return mb_substr(preg_replace("/[^A-Za-z0-9 ]/", '', $string), 0, $trim);
		else return preg_replace("/[^A-Za-z0-9 ]/", '', $string);
	}
 	public static function rucharclean($string, $trim = 0) {
		if($trim != 0) return mb_substr(mb_ereg_replace("/[^A-Za-zА-Яа-я0-9\[\]\!\.\?\(\)\,\@\#\%\:\*\=\+\-\—ёЁ\/ ]/", '', $string), 0, $trim);
		else return mb_ereg_replace("/[^A-Za-zА-Яа-я0-9\[\]\!\.\?\(\)\,\@\#\%\:\*\=\+\-\—ёЁ\/ ]/", '', $string);
	}
	public static function numbercolon($string, $trim = 0){
		if($trim != 0) return mb_substr(preg_replace("/[^0-9,-]/", '', $string), 0, $trim);
		else return preg_replace("/[^0-9,-]/", '', $string);
	}
	public static function number($string, $trim = 0){
		if($trim != 0) return mb_substr(preg_replace("/[^0-9]/", '', $string), 0, $trim);
		else return preg_replace("/[^0-9]/", '', $string);
	}
	public static function rutoen($string, $trim = 0) {
		$ru = ['а', 'б', 'в', 'г', 'д', 'е', 'ё', 'ж', 'з', 'и', 'й', 'к', 'л', 'м', 'н', 'о', 'п', 'р', 'с', 'т', 'у', 'ф', 'х', 'ц', 'ч', 'ш', 'щ', 'ъ', 'ы', 'ь', 'э', 'ю', 'я', 'А', 'Б', 'В', 'Г', 'Д', 'Е', 'Ё', 'Ж', 'З', 'И', 'Й', 'К', 'Л', 'М', 'Н', 'О', 'П', 'Р', 'С', 'Т', 'У', 'Ф', 'Х', 'Ц', 'Ч', 'Ш', 'Щ', 'Ъ', 'Ы', 'Ь', 'Э', 'Ю', 'Я'];
		$en = ['a', 'b', 'v', 'g', 'd', 'e', 'yo', 'zh', 'z', 'i', 'y', 'k', 'l', 'm', 'n', 'o', 'p', 'r', 's', 't', 'u', 'f', 'h', 'c', 'ch', 'sh', 'sch', '', 'y', '', 'e', 'yu', 'ya', 'A', 'B', 'V', 'G', 'D', 'E', 'YO', 'ZH', 'Z', 'I', 'Y', 'K', 'L', 'M', 'N', 'O', 'P', 'R', 'S', 'T', 'U', 'F', 'H', 'C', 'CH', 'SH', 'SCH', '', 'Y', '', 'E', 'YU', 'YA'];
		if($trim != 0) return mb_substr(str_replace($ru, $en, $string), 0, $trim);
		else return str_replace($ru, $en, $string);
	}
}
?>
